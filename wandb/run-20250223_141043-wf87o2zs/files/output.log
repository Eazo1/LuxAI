Starting training...
Iteration 100, training loss: 0.7729
Validation loss: 0.7438
Iteration 200, training loss: 0.7474
Validation loss: 0.7438
Iteration 300, training loss: 0.7336
Validation loss: 0.7438
Iteration 400, training loss: 0.7479
Validation loss: 0.7438
Iteration 500, training loss: 0.7405
Validation loss: 0.7438
Iteration 600, training loss: 0.7719
Validation loss: 0.7438
Iteration 700, training loss: 0.7213
Validation loss: 0.7438
Iteration 800, training loss: 0.7422
Validation loss: 0.7438
Iteration 900, training loss: 0.7555
Validation loss: 0.7438
Iteration 1000, training loss: 0.7069
Validation loss: 0.7438
Iteration 1100, training loss: 0.7529
Validation loss: 0.7438
Iteration 1200, training loss: 0.7594
Validation loss: 0.7438
Iteration 1300, training loss: 0.7399
Validation loss: 0.7438
Iteration 1400, training loss: 0.7496
Validation loss: 0.7438
Iteration 1500, training loss: 0.7584
Validation loss: 0.7438
Iteration 1600, training loss: 0.7609
Validation loss: 0.7438
Iteration 1700, training loss: 0.7354
Validation loss: 0.7438
Iteration 1800, training loss: 0.7768
Validation loss: 0.7438
Iteration 1900, training loss: 0.7533
Validation loss: 0.7438
Iteration 2000, training loss: 0.7267
Validation loss: 0.7438
Iteration 2100, training loss: 0.7241
Validation loss: 0.7438
Iteration 2200, training loss: 0.7512
Validation loss: 0.7438
Iteration 2300, training loss: 0.7417
Validation loss: 0.7438
Iteration 2400, training loss: 0.7272
Validation loss: 0.7438
Iteration 2500, training loss: 0.7618
Validation loss: 0.7438
Iteration 2600, training loss: 0.7302
Validation loss: 0.7438
Iteration 2700, training loss: 0.7551
Validation loss: 0.7438
Iteration 2800, training loss: 0.7507
Validation loss: 0.7438
Iteration 2900, training loss: 0.7672
Validation loss: 0.7438
Iteration 3000, training loss: 0.7579
Validation loss: 0.7438
Traceback (most recent call last):
  File "C:\Users\ahmad\Desktop\lux\GOM_autoencoder.py", line 253, in <module>
    axes[1, i].imshow(recon_goms[i, 0].cpu().numpy(), cmap='viridis')
  File "C:\Users\ahmad\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\matplotlib\__init__.py", line 1478, in inner
    return func(ax, *map(sanitize_sequence, args), **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ahmad\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\matplotlib\axes\_axes.py", line 5751, in imshow
    im.set_data(X)
  File "C:\Users\ahmad\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\matplotlib\image.py", line 723, in set_data
    self._A = self._normalize_image_array(A)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\ahmad\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages\matplotlib\image.py", line 693, in _normalize_image_array
    raise TypeError(f"Invalid shape {A.shape} for image data")
TypeError: Invalid shape (49,) for image data
